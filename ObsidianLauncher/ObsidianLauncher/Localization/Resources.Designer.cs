//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ObsidianLauncher.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ObsidianLauncher.Localization.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ABOUT.
        /// </summary>
        internal static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OBSIDIAN LAUNCHER.
        /// </summary>
        internal static string AppTitle {
            get {
                return ResourceManager.GetString("AppTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CHANGE PATH.
        /// </summary>
        internal static string ChangePath {
            get {
                return ResourceManager.GetString("ChangePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CHECK FOR UPDATES.
        /// </summary>
        internal static string CheckForUpdates {
            get {
                return ResourceManager.GetString("CheckForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates....
        /// </summary>
        internal static string CheckingForUpdates {
            get {
                return ResourceManager.GetString("CheckingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to © 2025 OBSIDIAN LAUNCHER.
        /// </summary>
        internal static string Copyright {
            get {
                return ResourceManager.GetString("Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark.
        /// </summary>
        internal static string Dark {
            get {
                return ResourceManager.GetString("Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download error.
        /// </summary>
        internal static string DownloadError {
            get {
                return ResourceManager.GetString("DownloadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to open browser.
        /// </summary>
        internal static string FailedToOpenBrowser {
            get {
                return ResourceManager.GetString("FailedToOpenBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation complete.
        /// </summary>
        internal static string InstallationComplete {
            get {
                return ResourceManager.GetString("InstallationComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation failed.
        /// </summary>
        internal static string InstallationFailed {
            get {
                return ResourceManager.GetString("InstallationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSTALLATION PATH.
        /// </summary>
        internal static string InstallationPath {
            get {
                return ResourceManager.GetString("InstallationPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSTALL.
        /// </summary>
        internal static string InstallUpdate {
            get {
                return ResourceManager.GetString("InstallUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LAUNCH.
        /// </summary>
        internal static string Launch {
            get {
                return ResourceManager.GetString("Launch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launched successfully.
        /// </summary>
        internal static string LaunchedSuccessfully {
            get {
                return ResourceManager.GetString("LaunchedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LAUNCHER ARGUMENTS.
        /// </summary>
        internal static string LauncherArguments {
            get {
                return ResourceManager.GetString("LauncherArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom arguments to pass to Resonite on launch.
        /// </summary>
        internal static string LauncherArgumentsDesc {
            get {
                return ResourceManager.GetString("LauncherArgumentsDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LAUNCHER VERSION.
        /// </summary>
        internal static string LauncherVersion {
            get {
                return ResourceManager.GetString("LauncherVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch failed.
        /// </summary>
        internal static string LaunchFailed {
            get {
                return ResourceManager.GetString("LaunchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        internal static string Light {
            get {
                return ResourceManager.GetString("Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No installation directory selected.
        /// </summary>
        internal static string NoDirectorySelected {
            get {
                return ResourceManager.GetString("NoDirectorySelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Resonite installation found.
        /// </summary>
        internal static string NoInstallationFound {
            get {
                return ResourceManager.GetString("NoInstallationFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not found.
        /// </summary>
        internal static string NotFound {
            get {
                return ResourceManager.GetString("NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not installed.
        /// </summary>
        internal static string NotInstalled {
            get {
                return ResourceManager.GetString("NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OBSIDIAN VERSION.
        /// </summary>
        internal static string ObsidianVersion {
            get {
                return ResourceManager.GetString("ObsidianVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready to install.
        /// </summary>
        internal static string ReadyToInstall {
            get {
                return ResourceManager.GetString("ReadyToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready to launch.
        /// </summary>
        internal static string ReadyToLaunch {
            get {
                return ResourceManager.GetString("ReadyToLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SETTINGS.
        /// </summary>
        internal static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
    }
}
